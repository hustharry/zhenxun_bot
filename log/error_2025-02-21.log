02-21 04:30:06 [ERROR] zhenxun | 更新色图 4.jpg 错误 <class 'FileExistsError'>: [WinError 183] 当文件已存在时，无法创建该文件。: 'resources\\temp\\4.jpg' -> 'resources\\image\\_setu\\4.jpg'
02-21 04:30:14 [ERROR] zhenxun | 更新色图 3.jpg 错误 <class 'FileExistsError'>: [WinError 183] 当文件已存在时，无法创建该文件。: 'resources\\temp\\3.jpg' -> 'resources\\image\\_setu\\3.jpg'
02-21 06:01:00 [ERROR] zhenxun | CMD[被动早晚安] [Target]([992333365:None]) 发送失败 || 错误 <class 'nonebot.adapters.onebot.v11.exception.ActionFailed'>: ActionFailed(status='failed', retcode=1200, data=None, message='EventChecker Failed: NTEvent serviceAndMethod:NodeIKernelMsgService/sendMsg ListenerName:NodeIKernelMsgListener/onMsgInfoListUpdate EventRet:\n{\n    "result": 120,\n    "errMsg": ""\n}\n', wording='EventChecker Failed: NTEvent serviceAndMethod:NodeIKernelMsgService/sendMsg ListenerName:NodeIKernelMsgListener/onMsgInfoListUpdate EventRet:\n{\n    "result": 120,\n    "errMsg": ""\n}\n', echo='506')
02-21 09:01:00 [ERROR] zhenxun | CMD[被动每日新闻] [Target]([992333365:None]) 发送失败 || 错误 <class 'nonebot.adapters.onebot.v11.exception.ActionFailed'>: ActionFailed(status='failed', retcode=1200, data=None, message='EventChecker Failed: NTEvent serviceAndMethod:NodeIKernelMsgService/sendMsg ListenerName:NodeIKernelMsgListener/onMsgInfoListUpdate EventRet:\n{\n    "result": 120,\n    "errMsg": ""\n}\n', wording='EventChecker Failed: NTEvent serviceAndMethod:NodeIKernelMsgService/sendMsg ListenerName:NodeIKernelMsgListener/onMsgInfoListUpdate EventRet:\n{\n    "result": 120,\n    "errMsg": ""\n}\n', echo='761')
02-21 09:01:05 [ERROR] zhenxun | CMD[被动每日新闻] [Target]([992333365:None]) 发送失败 || 错误 <class 'nonebot.adapters.onebot.v11.exception.ActionFailed'>: ActionFailed(status='failed', retcode=1200, data=None, message='EventChecker Failed: NTEvent serviceAndMethod:NodeIKernelMsgService/sendMsg ListenerName:NodeIKernelMsgListener/onMsgInfoListUpdate EventRet:\n{\n    "result": 120,\n    "errMsg": ""\n}\n', wording='EventChecker Failed: NTEvent serviceAndMethod:NodeIKernelMsgService/sendMsg ListenerName:NodeIKernelMsgListener/onMsgInfoListUpdate EventRet:\n{\n    "result": 120,\n    "errMsg": ""\n}\n', echo='764')
02-21 10:08:29 [ERROR] nonebot | Error when running WebSocketDisConnection hook. Running cancelled!
Traceback (most recent call last):

  File "C:\Program Files\zhenxun\zhenxun_bot-dev\bot.py", line 27, in <module>
    nonebot.run()
    │       └ <function run at 0x000001554EDE6290>
    └ <module 'nonebot' from 'C:\\Users\\Administrator\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\zhenxun-bot-k9jvl_fX-py3.10\\...

  File "C:\Users\Administrator\AppData\Local\pypoetry\Cache\virtualenvs\zhenxun-bot-k9jvl_fX-py3.10\lib\site-packages\nonebot\__init__.py", line 335, in run
    get_driver().run(*args, **kwargs)
    │                 │       └ {}
    │                 └ ()
    └ <function get_driver at 0x000001554EDE60E0>

  File "C:\Users\Administrator\AppData\Local\pypoetry\Cache\virtualenvs\zhenxun-bot-k9jvl_fX-py3.10\lib\site-packages\nonebot\drivers\fastapi.py", line 186, in run
    uvicorn.run(
    │       └ <function run at 0x000001554F5BBD00>
    └ <module 'uvicorn' from 'C:\\Users\\Administrator\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\zhenxun-bot-k9jvl_fX-py3.10\\...

  File "C:\Users\Administrator\AppData\Local\pypoetry\Cache\virtualenvs\zhenxun-bot-k9jvl_fX-py3.10\lib\site-packages\uvicorn\main.py", line 579, in run
    server.run()
    │      └ <function Server.run at 0x000001554F5BB640>
    └ <uvicorn.server.Server object at 0x000001555F383BE0>

  File "C:\Users\Administrator\AppData\Local\pypoetry\Cache\virtualenvs\zhenxun-bot-k9jvl_fX-py3.10\lib\site-packages\uvicorn\server.py", line 65, in run
    return asyncio.run(self.serve(sockets=sockets))
           │       │   │    │             └ None
           │       │   │    └ <function Server.serve at 0x000001554F5BB6D0>
           │       │   └ <uvicorn.server.Server object at 0x000001555F383BE0>
           │       └ <function run at 0x000001554CAD0E50>
           └ <module 'asyncio' from 'C:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python310\\lib\\asyncio\\__init__.py'>

  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python310\lib\asyncio\runners.py", line 44, in run
    return loop.run_until_complete(main)
           │    │                  └ <coroutine object Server.serve at 0x0000015552897300>
           │    └ <function BaseEventLoop.run_until_complete at 0x000001554CBD0280>
           └ <ProactorEventLoop running=True closed=False debug=False>

  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python310\lib\asyncio\base_events.py", line 636, in run_until_complete
    self.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x000001554E811510>
    └ <ProactorEventLoop running=True closed=False debug=False>

  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python310\lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()

  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python310\lib\asyncio\base_events.py", line 603, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x000001554CBD1CF0>
    └ <ProactorEventLoop running=True closed=False debug=False>

  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python310\lib\asyncio\base_events.py", line 1909, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x000001554CB809D0>
    └ <Handle Task.task_wakeup(<_GatheringFu... is closing')>)>

  File "C:\Users\Administrator\AppData\Local\Programs\Python\Python310\lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<_GatheringFu... is closing')>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<_GatheringFu... is closing')>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<_GatheringFu... is closing')>)>

> File "C:\Users\Administrator\AppData\Local\pypoetry\Cache\virtualenvs\zhenxun-bot-k9jvl_fX-py3.10\lib\site-packages\nonebot\internal\driver\abstract.py", line 197, in _run_hook
    await asyncio.gather(*coros)
          │       │       └ [<coroutine object run_coro_with_catch at 0x000001555F3DC740>, <coroutine object run_coro_with_catch at 0x000001555F3DFA70>]
          │       └ <function gather at 0x000001554CBAF520>
          └ <module 'asyncio' from 'C:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python310\\lib\\asyncio\\__init__.py'>

  File "C:\Users\Administrator\AppData\Local\pypoetry\Cache\virtualenvs\zhenxun-bot-k9jvl_fX-py3.10\lib\site-packages\nonebot\utils.py", line 236, in run_coro_with_catch
    return await coro
                 └ <coroutine object Dependent.__call__ at 0x000001555F953D10>

  File "C:\Users\Administrator\AppData\Local\pypoetry\Cache\virtualenvs\zhenxun-bot-k9jvl_fX-py3.10\lib\site-packages\nonebot\dependencies\__init__.py", line 94, in __call__
    return await cast(Callable[..., Awaitable[R]], self.call)(**values)
                 │    │             │         │    │    │       └ {'bot': Bot(type='OneBot V11', self_id='3973508735')}
                 │    │             │         │    │    └ <function _ at 0x000001555010A950>
                 │    │             │         │    └ Dependent(call=_)
                 │    │             │         └ ~R
                 │    │             └ <class 'collections.abc.Awaitable'>
                 │    └ typing.Callable
                 └ <function cast at 0x000001554C9604C0>

  File "C:\Program Files\zhenxun\zhenxun_bot-dev\zhenxun\builtin_plugins\__init__.py", line 47, in _
    await BotConnectLog.create(
          │             └ <classmethod(<function Model.create at 0x000001555175B490>)>
          └ <class 'zhenxun.models.bot_connect_log.BotConnectLog'>

  File "C:\Users\Administrator\AppData\Local\pypoetry\Cache\virtualenvs\zhenxun-bot-k9jvl_fX-py3.10\lib\site-packages\tortoise\models.py", line 1136, in create
    await instance.save(using_db=db, force_create=True)
          │        │             └ <tortoise.backends.asyncpg.client.AsyncpgDBClient object at 0x000001555F3E4730>
          │        └ <function Model.save at 0x000001555175B010>
          └ <BotConnectLog>

  File "C:\Users\Administrator\AppData\Local\pypoetry\Cache\virtualenvs\zhenxun-bot-k9jvl_fX-py3.10\lib\site-packages\tortoise\models.py", line 944, in save
    await executor.execute_insert(self)
          │        │              └ <BotConnectLog>
          │        └ <function BaseExecutor.execute_insert at 0x00000155516F3880>
          └ <tortoise.backends.asyncpg.executor.AsyncpgExecutor object at 0x000001556575DE70>

  File "C:\Users\Administrator\AppData\Local\pypoetry\Cache\virtualenvs\zhenxun-bot-k9jvl_fX-py3.10\lib\site-packages\tortoise\backends\base\executor.py", line 227, in execute_insert
    insert_result = await self.db.execute_insert(self.insert_query, values)
                          │    │  │              │    │             └ ['3973508735', "Adapter(name='OneBot V11')", datetime.datetime(2025, 2, 21, 10, 8, 29, 21334, tzinfo=<DstTzInfo 'Asia/Shangha...
                          │    │  │              │    └ 'INSERT INTO "bot_connect_log" ("bot_id","platform","connect_time","type","create_time") VALUES ($1,$2,$3,$4,$5) RETURNING "id"'
                          │    │  │              └ <tortoise.backends.asyncpg.executor.AsyncpgExecutor object at 0x000001556575DE70>
                          │    │  └ <function AsyncpgDBClient.execute_insert at 0x000001555F42A0E0>
                          │    └ <tortoise.backends.asyncpg.client.AsyncpgDBClient object at 0x000001555F3E4730>
                          └ <tortoise.backends.asyncpg.executor.AsyncpgExecutor object at 0x000001556575DE70>

  File "C:\Users\Administrator\AppData\Local\pypoetry\Cache\virtualenvs\zhenxun-bot-k9jvl_fX-py3.10\lib\site-packages\tortoise\backends\base_postgres\client.py", line 34, in _translate_exceptions
    return await self._translate_exceptions(func, *args, **kwargs)
                 │    │                     │      │       └ {}
                 │    │                     │      └ ('INSERT INTO "bot_connect_log" ("bot_id","platform","connect_time","type","create_time") VALUES ($1,$2,$3,$4,$5) RETURNING "...
                 │    │                     └ <function AsyncpgDBClient.execute_insert at 0x000001555F42A050>
                 │    └ <function AsyncpgDBClient._translate_exceptions at 0x000001555F429E10>
                 └ <tortoise.backends.asyncpg.client.AsyncpgDBClient object at 0x000001555F3E4730>

  File "C:\Users\Administrator\AppData\Local\pypoetry\Cache\virtualenvs\zhenxun-bot-k9jvl_fX-py3.10\lib\site-packages\tortoise\backends\asyncpg\client.py", line 82, in _translate_exceptions
    return await func(self, *args, **kwargs)
                 │    │      │       └ {}
                 │    │      └ ('INSERT INTO "bot_connect_log" ("bot_id","platform","connect_time","type","create_time") VALUES ($1,$2,$3,$4,$5) RETURNING "...
                 │    └ <tortoise.backends.asyncpg.client.AsyncpgDBClient object at 0x000001555F3E4730>
                 └ <function AsyncpgDBClient.execute_insert at 0x000001555F42A050>

  File "C:\Users\Administrator\AppData\Local\pypoetry\Cache\virtualenvs\zhenxun-bot-k9jvl_fX-py3.10\lib\site-packages\tortoise\backends\asyncpg\client.py", line 105, in execute_insert
    async with self.acquire_connection() as connection:
               │    └ <function AsyncpgDBClient.acquire_connection at 0x000001555F429F30>
               └ <tortoise.backends.asyncpg.client.AsyncpgDBClient object at 0x000001555F3E4730>

  File "C:\Users\Administrator\AppData\Local\pypoetry\Cache\virtualenvs\zhenxun-bot-k9jvl_fX-py3.10\lib\site-packages\tortoise\backends\base\client.py", line 328, in __aenter__
    self.connection = await self.pool.acquire()
    │    │                  │    │    └ <function Pool.acquire at 0x000001555E6F36D0>
    │    │                  │    └ <asyncpg.pool.Pool object at 0x00000155587ED170>
    │    │                  └ <tortoise.backends.base.client.PoolConnectionWrapper object at 0x000001555FADBF40>
    │    └ None
    └ <tortoise.backends.base.client.PoolConnectionWrapper object at 0x000001555FADBF40>

  File "C:\Users\Administrator\AppData\Local\pypoetry\Cache\virtualenvs\zhenxun-bot-k9jvl_fX-py3.10\lib\site-packages\asyncpg\pool.py", line 817, in _acquire
    raise exceptions.InterfaceError('pool is closing')
          │          └ <class 'asyncpg.exceptions._base.InterfaceError'>
          └ <module 'asyncpg.exceptions' from 'C:\\Users\\Administrator\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\zhenxun-bot-k9jvl_...

asyncpg.exceptions._base.InterfaceError: pool is closing
